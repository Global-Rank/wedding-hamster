<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>–°–≤–∞–¥–µ–±–Ω–∞—è –ò–≥—Ä–∞</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
            height: 100vh;
            overflow: hidden;
            background: url('https://ru.files.fm/u/wcqhfz8qfs') no-repeat center center fixed;
            background-size: cover;
            touch-action: manipulation;
            position: relative;
        }

        #counter {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 32px;
            color: #fff;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
            z-index: 2;
            padding: 10px 20px;
            background: rgba(255, 215, 0, 0.9);
            border-radius: 15px;
            border: 2px solid white;
        }

        .hamster {
            width: 350px;
            height: 350px;
            cursor: pointer;
            position: absolute;
            user-select: none;
            -webkit-tap-highlight-color: transparent;
            transition: all 0.3s ease;
            filter: drop-shadow(0 0 10px rgba(255,215,0,0.8));
        }

        .hamster:active {
            transform: scale(0.85) rotate(10deg);
            filter: drop-shadow(0 0 20px rgba(255,105,180,1));
        }

        #invitation {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: linear-gradient(45deg, #fff5f5, #ffecec);
            padding: 30px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,20,147,0.3);
            z-index: 3;
            width: 80%;
            max-width: 500px;
            border: 3px solid #ff69b4;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: translate(-50%, -50%) scale(1); }
            50% { transform: translate(-50%, -50%) scale(1.05); }
            100% { transform: translate(-50%, -50%) scale(1); }
        }

        .invitation-text {
            font-family: 'Arial', sans-serif;
            color: #8b4513;
            margin: 15px 0;
            font-size: 1.2em;
            text-shadow: 1px 1px 2px rgba(255,255,255,0.5);
        }

        button {
            background: linear-gradient(45deg, #ff69b4, #ff1493);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 30px;
            margin: 15px;
            font-size: 18px;
            cursor: pointer;
            transition: all 0.3s;
            box-shadow: 0 4px 15px rgba(255,105,180,0.4);
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255,105,180,0.6);
        }

        .sparkles {
            position: absolute;
            pointer-events: none;
            width: 20px;
            height: 20px;
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="%23FFD700" d="M12 1L15.09 7.26L22 8.27L17 13.14L18.18 20.02L12 16.77L5.82 20.02L7 13.14L2 8.27L8.91 7.26L12 1Z"/></svg>');
            animation: sparkle 1s ease-out;
        }

        @keyframes sparkle {
            0% { opacity: 1; transform: scale(1); }
            100% { opacity: 0; transform: scale(3) rotate(360deg); }
        }
    </style>
</head>
<body>
    <div id="counter">‚ù§Ô∏è –°—á–µ—Ç: 0</div>
    <img src="https://ru.files.fm/u/g45yjtkfbu" 
         class="hamster" 
         id="hamster"
         alt="–•–æ–º—è–∫">
    
    <div id="invitation">
        <h2 class="invitation-text">üéâ –í–∞—Å –ø—Ä–∏–≥–ª–∞—à–∞—é—Ç –Ω–∞ —Å–≤–∞–¥—å–±—É! üéâ</h2>
        <p class="invitation-text">–ù–∏–∫–∏—Ç–∞ & –Æ–ª—è</p>
        <p class="invitation-text">üìÖ 29 –º–∞—è 2025 –≥–æ–¥–∞</p>
        <p class="invitation-text">‚è∞ 17:30</p>
        <p class="invitation-text">üèõ –ê–Ω—Ç–∏-–∫–∞—Ñ–µ "–¶–∏—Ñ–µ—Ä–±–ª–∞—Ç"</p>
        <button onclick="Telegram.WebApp.close()">–ü—Ä–∏–Ω—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ ‚ú®</button>
    </div>

    <script>
        let score = 0;
        const hamster = document.getElementById('hamster');
        const counter = document.getElementById('counter');
        const invitation = document.getElementById('invitation');

        Telegram.WebApp.ready();
        Telegram.WebApp.expand();

        hamster.addEventListener('click', (e) => {
            score++;
            counter.textContent = `‚ù§Ô∏è –°—á–µ—Ç: ${score}`;
            
            // –ù–æ–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è —Å –±–ª–µ—Å—Ç–∫–∞–º–∏
            for(let i = 0; i < 5; i++) {
                const spark = document.createElement('div');
                spark.className = 'sparkles';
                spark.style.left = e.pageX - 10 + 'px';
                spark.style.top = e.pageY - 10 + 'px';
                document.body.appendChild(spark);
                
                setTimeout(() => spark.remove(), 1000);
            }

            if(score >= 20) {
                invitation.style.display = 'block';
                hamster.style.display = 'none';
                Telegram.WebApp.HapticFeedback.impactOccurred('heavy');
            }
        });

        // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        function moveHamster() {
            if(score < 20) {
                const maxX = window.innerWidth - 350;
                const maxY = window.innerHeight - 350;
                const newX = Math.random() * maxX;
                const newY = Math.random() * maxY;
                
                hamster.style.transition = 'all 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
                hamster.style.left = newX + 'px';
                hamster.style.top = newY + 'px';
            }
        }

        setInterval(moveHamster, 1500);
        moveHamster();
    </script>
</body>
</html>
